from setuptools import setup, find_packages

setup(
    name="nessus_verifier",
    version="0.0.1",
    description="Pentests services from nessus file",
    long_description=open("README.md").read(),
    long_description_content_type="text/markdown",
    author="kcancurly",
    url="https://github.com/kcancurly/nessus-verifier",
    packages=find_packages(),
    include_package_data=True,
    install_requires=[
        "requests",
        "dnspython",
        "ntplib",
        "impacket",
        "pyaml",
        "pysmb",
        "pymongo",
        "python-nmap",
        "rich",
    ],
    classifiers=[
        "Programming Language :: Python :: 3",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
    ],
    python_requires=">=3.12",
    entry_points={
        "console_scripts": [
            "nv-parse=src.main:main",
            "nv-ssh=src.services.ssh:main",
            "nv-ftp=src.services.ftp:main",
            "nv-chargen=src.services.chargen:main",
            "nv-qotd=src.services.qotd:main",
            "nv-daytime=src.services.daytime:main",
            "nv-systat=src.services.systat:main",
            "nv-discard=src.services.discard:main",
            "nv-echo=src.services.echo:main",
            "nv-netstat=src.services.netstat:main",
            "nv-telnet=src.services.telnet:main",
            "nv-smtp=src.services.smtp:main",
            "nv-ms-exchange=src.services.ms_exchange:main",
            "nv-time=src.services.time:main",
            "nv-dns=src.services.dns:main",
            "nv-tftp=src.services.tftp:main",
            "nv-finger=src.services.finger:main",
            "nv-ident=src.services.ident:main",
            "nv-ntp=src.services.ntp:main",
            "nv-imap=src.services.imap:main",
            "nv-rpc=src.services.rpc:main",
            "nv-snmp=src.services.snmp:main",
            "nv-ldap=src.services.ldap:main",
            "nv-smb=src.services.smb:main",
            "nv-rlogin=src.services.rlogin:main",
            "nv-solver=src.solvers.solver:main",
        ],
    },
)
